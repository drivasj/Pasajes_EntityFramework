//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Udemy.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BDPasajeEntities : DbContext
    {
        public BDPasajeEntities()
            : base("name=BDPasajeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Asiento> Asiento { get; set; }
        public virtual DbSet<Bus> Bus { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<ContadorMarca> ContadorMarca { get; set; }
        public virtual DbSet<Customers> Customers { get; set; }
        public virtual DbSet<DETALLEVENTA> DETALLEVENTA { get; set; }
        public virtual DbSet<Empleado> Empleado { get; set; }
        public virtual DbSet<Image> Image { get; set; }
        public virtual DbSet<Lugar> Lugar { get; set; }
        public virtual DbSet<Marca> Marca { get; set; }
        public virtual DbSet<MarcaDR> MarcaDR { get; set; }
        public virtual DbSet<Modelo> Modelo { get; set; }
        public virtual DbSet<Pagina> Pagina { get; set; }
        public virtual DbSet<Rol> Rol { get; set; }
        public virtual DbSet<RolPagina> RolPagina { get; set; }
        public virtual DbSet<Sexo> Sexo { get; set; }
        public virtual DbSet<Sucursal> Sucursal { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TipoBus> TipoBus { get; set; }
        public virtual DbSet<TipoContrato> TipoContrato { get; set; }
        public virtual DbSet<TipoUsuario> TipoUsuario { get; set; }
        public virtual DbSet<TIPOUSUARIOREGISTRO> TIPOUSUARIOREGISTRO { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<VENTA> VENTA { get; set; }
        public virtual DbSet<Viaje> Viaje { get; set; }
        public virtual DbSet<MainMenu> MainMenu { get; set; }
        public virtual DbSet<SubMenu> SubMenu { get; set; }
        public virtual DbSet<VW_Marca> VW_Marca { get; set; }
    
        public virtual ObjectResult<SP_Marcas_Habilitadas_Result> SP_Marcas_Habilitadas(Nullable<int> iDMARC)
        {
            var iDMARCParameter = iDMARC.HasValue ?
                new ObjectParameter("IDMARC", iDMARC) :
                new ObjectParameter("IDMARC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Marcas_Habilitadas_Result>("SP_Marcas_Habilitadas", iDMARCParameter);
        }
    
        public virtual ObjectResult<SP_Lugares_Result> SP_Lugares(Nullable<int> iD_ini, Nullable<int> iD_fin)
        {
            var iD_iniParameter = iD_ini.HasValue ?
                new ObjectParameter("ID_ini", iD_ini) :
                new ObjectParameter("ID_ini", typeof(int));
    
            var iD_finParameter = iD_fin.HasValue ?
                new ObjectParameter("ID_fin", iD_fin) :
                new ObjectParameter("ID_fin", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Lugares_Result>("SP_Lugares", iD_iniParameter, iD_finParameter);
        }
    }
}
